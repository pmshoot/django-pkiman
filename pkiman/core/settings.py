"""
Django settings for pkiman project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Environment settings #########################################################
env = environ.Env(
    # set casting, default value
    DEBUG=(bool, False)
    )

environ.Env.read_env(BASE_DIR / 'core' / '.env')

DEBUG = env('DEBUG')

SECRET_KEY = env('SECRET_KEY')

ALLOWED_HOSTS = env.list('ALLOWED_HOSTS', cast=str)

DATABASES = {
    'default': env.db('DATABASE_URL',
                      default=f"sqlite:////{str(BASE_DIR.joinpath('db.sqlite3').resolve())}"
                      )
    }

STATIC_URL = env('STATIC_URL', default='assets/')
MEDIA_URL = env('MEDIA_URL', default='store/')

# --- PKIMAN ---
PKIMAN_JOURNAL_STORE_PERIOD = env('PKIMAN_JOURNAL_STORE_PERIOD', cast=int, default=365)
PKIMAN_MAX_OLD_PKI_TIME = env('PKIMAN_MAX_OLD_PKI_TIME', cast=int, default=12)
PKIMAN_PAGINATE_BY = env('PKIMAN_PAGINATE_BY', cast=int, default=20)
PKIMAN_STORE_NGINX_USE_HTTPS = env('PKIMAN_STORE_NGINX_USE_HTTPS', cast=bool, default=False)

# Периодический запуск функции обновления CRL
# MIN HOURS DAY MONTH WEEKDAY
# CRONJOBS = [  # TODO! Убрать. Вызывать из системного крона 'management command pkiupdate' с параметрами
    # ('*/15 12-18 * * *', 'pkiman.utils.download.update_handle'),
    # ('1 0-23 * * *', 'pkiman.utils.download.update_handle'),
    # ('0 0 1 * *', 'pkiman.utils.logger.journal_clean')  # TODO добавить management command для запуска очистки журнала
    # ]

# Constant settings ############################################################

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    # 'django_crontab',
    'environ',
    'taggit',
    'pkiman.apps.PkimanConfig',
    ]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    ]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                ],
            },
        },
    ]

WSGI_APPLICATION = 'core.wsgi.application'

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
        },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
        },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
        },
    ]

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'RU'

TIME_ZONE = 'Asia/Yekaterinburg'

USE_I18N = True
USE_L10N = True

USE_TZ = True

LOGIN_REDIRECT_URL = 'pkiman:index'

LOGOUT_REDIRECT_URL = 'pkiman:index'

STATIC_ROOT = BASE_DIR / 'assets'

STATICFILES_DIRS = (
    BASE_DIR / 'pkiman' / 'static' / 'pkiman',
    )

MEDIA_ROOT = BASE_DIR / 'store'

DEFAULT_FILE_STORAGE = 'pkiman.utils.storage.FileSystemOverwriteStorage'

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

FIRST_DAY_OF_WEEK = 1
